/**
 * 
 */
package com.trusdom.fdip.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.trusdom.fdip.form.BuyOrRedeForm;
import com.trusdom.fdip.services.BuyFundService;
import com.trusdom.fdip.services.RedeFundService;
import com.trusdom.fdip.vo.AvaiableAmountVo;
import com.trusdom.fdip.vo.BuyResultVo;
import com.trusdom.fdip.vo.RedeResultVo;

/**
 * @author  zhihuayang E-mail:425273175@qq.com 
 * @date 创建时间：2016年5月18日 上午11:47:44
 * @version 1.0 
 * @parameter  
 * @return  
*/

@Controller
@RequestMapping("/fund")
public  class FundController {
	
	@Autowired
	BuyFundService buyFundService;
	
	@Autowired
	RedeFundService redeFundService;
	
	@RequestMapping(method=RequestMethod.POST,value="/purchase")
	@ResponseBody
	public BuyResultVo buy(@RequestBody  @Validated BuyOrRedeForm buyOrRedeForm,BindingResult bindingResult) throws Exception{
		if(bindingResult.hasErrors()){
			BuyResultVo vo=new BuyResultVo();
			vo.setErrCode("4001");
			vo.setErrMsg(bindingResult.getFieldError().getDefaultMessage());
			return vo;
		}
		return buyFundService.buyThs(buyOrRedeForm);
	}
	
	@RequestMapping(method=RequestMethod.POST,value="/redemption")
	@ResponseBody
	public RedeResultVo rede(@RequestBody  @Validated BuyOrRedeForm buyOrRedeForm,BindingResult bindingResult) throws Exception{
		if(bindingResult.hasErrors()){
			RedeResultVo vo=new RedeResultVo();
			vo.setErrCode("4001");
			vo.setErrMsg(bindingResult.getFieldError().getDefaultMessage());
			return vo;
		}
		return redeFundService.RedeThs(buyOrRedeForm);
	}
	
	@RequestMapping(method=RequestMethod.GET,value="/redemption/avaiable")
	@ResponseBody
	public AvaiableAmountVo canRedeAmount(@RequestParam(value="accountNo",required=true) String accountNo,@RequestParam(value="fundCode",required=true) String fundCode){
//		if(bindingResult.hasErrors()){
//			AvaiableAmountVo vo=new AvaiableAmountVo();
//			vo.setErrCode("4001");
//			vo.setErrMsg(bindingResult.getFieldError().getDefaultMessage());
//			return vo;
//		}
		System.out.println(11111);
		return new AvaiableAmountVo();
	}
}
