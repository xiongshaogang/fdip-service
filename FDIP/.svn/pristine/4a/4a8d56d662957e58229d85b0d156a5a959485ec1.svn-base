/**
 * 
 */
package com.trusdom.fdip.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.client.RestTemplate;

import com.trusdom.fdip.form.BuyOrRedeForm;
import com.trusdom.fdip.form.IncomeRateForm;
import com.trusdom.fdip.services.BuyFundService1;
import com.trusdom.fdip.services.BuyFundService;
import com.trusdom.fdip.services.IncomeRateService;
import com.trusdom.fdip.services.IncomeRatesVo;
import com.trusdom.fdip.services.RedeFundService1;
import com.trusdom.fdip.services.RedeFundService;
import com.trusdom.fdip.vo.AbstractVo;
import com.trusdom.fdip.vo.AvaiableAmountVo;
import com.trusdom.fdip.vo.BaseVo;
import com.trusdom.fdip.vo.BuyResultVo;
import com.trusdom.fdip.vo.RedeResultVo;

/**
 * @author  zhihuayang E-mail:425273175@qq.com 
 * @date 创建时间：2016年5月18日 上午11:47:44
 * @version 1.0 
 * @parameter  
 * @return  
*/

@Controller
@RequestMapping("/fund")
public  class FundController {
	
	@Autowired
	BuyFundService buyFundService;
	
	@Autowired
	RedeFundService redeFundService;
	
	@Autowired
	IncomeRateService incomeRateService;
	
	@RequestMapping(method=RequestMethod.POST,value="/purchase")
	@ResponseBody
	public BuyResultVo buy(@RequestBody  @Validated BuyOrRedeForm buyOrRedeForm,BindingResult bindingResult) {
		if(bindingResult.hasErrors()){	
			BuyResultVo vo=new BuyResultVo();
			vo.createError("global.invalid");
			return vo;
		}
		try {
			return buyFundService.buyThs(buyOrRedeForm);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			BuyResultVo vo=new BuyResultVo();
			vo.createError("global.systemError");
			return vo; 
		}
	}
	
	@RequestMapping(method=RequestMethod.POST,value="/redemption")
	@ResponseBody
	public RedeResultVo rede(@RequestBody  @Validated BuyOrRedeForm buyOrRedeForm,BindingResult bindingResult) {
		if(bindingResult.hasErrors()){
			RedeResultVo vo=new RedeResultVo();
			vo.createError("global.invalid");
			return vo;
		}
		try {
			return redeFundService.RedeThs(buyOrRedeForm);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			RedeResultVo vo=new RedeResultVo();
			vo.createError("global.systemError");
			return vo;
		}
	}
	
	@RequestMapping(method=RequestMethod.GET,value="/redemption/avaiable")
	@ResponseBody
	public AvaiableAmountVo canRedeAmount(@RequestParam(value="accountNo",required=true) String accountNo,@RequestParam(value="fundCode",required=true) String fundCode){
//		if(bindingResult.hasErrors()){
//			AvaiableAmountVo vo=new AvaiableAmountVo();
//			return vo.createError("global.invalid");
//		}
		return redeFundService.findAvaiableAmount(accountNo, fundCode);
	}
	
	@RequestMapping(method=RequestMethod.POST,value="/incomeRate")
	@ResponseBody
	public AbstractVo getIncomeRates(@RequestBody  @Validated IncomeRateForm incomeRateForm,BindingResult bindingResult){
		if(bindingResult.hasErrors()){
			return BaseVo.error(bindingResult.getFieldError().getDefaultMessage());
		}
		return incomeRateService.find(incomeRateForm);
	}
}
