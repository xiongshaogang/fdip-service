package com.trusdom.fdip.spring.configs;

import javax.sql.DataSource;

import org.quartz.CronTrigger;
import org.springframework.beans.BeansException;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.io.FileSystemResource;
import org.springframework.scheduling.quartz.CronTriggerFactoryBean;
import org.springframework.scheduling.quartz.JobDetailFactoryBean;
import org.springframework.scheduling.quartz.SchedulerFactoryBean;
import org.springframework.scheduling.quartz.SpringBeanJobFactory;

import com.trusdom.fdip.scheduler.AutowiringSpringBeanJobFactory;
import com.trusdom.fdip.scheduler.SyncIncomeJob;

/**
 * 
* @ClassName: QuartzConfig 
* @Description: TODO(***)
* @author zjb 
* @date May 4, 2016 5:59:45 PM
*
 */
//@Configuration
public class QuartzConfig implements ApplicationContextAware, InitializingBean {

	public static ApplicationContext ctx;
	@Override
	public void setApplicationContext(ApplicationContext ctx)
			throws BeansException {
		this.ctx = ctx;
	}
	
	@Override
	public void afterPropertiesSet() throws Exception {
		
		
	}
	@Bean
	public JobDetailFactoryBean jobDetail(){
		JobDetailFactoryBean jobDetail = new JobDetailFactoryBean();
		jobDetail.setDurability(true);
		jobDetail.setJobClass(SyncIncomeJob.class);
		/*jobDetail.setName(Constants.SIGN_JOB_NAME);*/
		jobDetail.setRequestsRecovery(true);
		return jobDetail;
	}
	
	@Bean
	public CronTriggerFactoryBean cronTrigger(){
		CronTriggerFactoryBean trigger = new CronTriggerFactoryBean();
		/*trigger.setName(Constants.SIGN_TRIGGER_NAME);*/
		trigger.setJobDetail(jobDetail().getObject());
		trigger.setCronExpression("0 */1 * * * ?");
		trigger.setMisfireInstruction(CronTrigger.MISFIRE_INSTRUCTION_DO_NOTHING);
		return trigger;
	}
	
	@Bean
	public SpringBeanJobFactory jobFactory(){
		AutowiringSpringBeanJobFactory jobFactory = new AutowiringSpringBeanJobFactory();
		return jobFactory;
	}
	
	@Bean
	public SchedulerFactoryBean _scheduler_(){
		SchedulerFactoryBean _scheduler = new SchedulerFactoryBean();
		_scheduler.setConfigLocation(new FileSystemResource(QuartzConfig.class.getResource("/quartz.properties").getPath()));
		_scheduler.setAutoStartup(true);
		_scheduler.setDataSource((DataSource) ctx.getBean("dataSource"));
		_scheduler.setOverwriteExistingJobs(true);
		//_scheduler.setJobDetails(jobDetail().getObject());
		_scheduler.setTriggers(cronTrigger().getObject());
		_scheduler.setJobFactory(jobFactory());
		return _scheduler;
		
	}
}
